"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-u!i5)5!+%m5edy+0tqe!vc99phl1^t437u6k@g%d2howk2z@4x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
AUTH_USER_MODEL = 'bookshelf.Customer'






# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookshelf',
    'relationship_app',
    'accounts',
    "csp",
    "django_extensions"

]
AUTH_USER_MODEL = 'accounts.Customer'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'home'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'
# ---------- Core ----------
DEBUG = False  # in production
ALLOWED_HOSTS = ["your-domain.com", "www.your-domain.com"]  # set your hosts

# ---------- SecurityMiddleware ----------
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    # CSP middleware (after SecurityMiddleware; see CSP section below)
    "csp.middleware.CSPMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# ---------- Cookies ----------
SESSION_COOKIE_SECURE = True         
CSRF_COOKIE_SECURE = True           
SESSION_COOKIE_HTTPONLY = True       
# If you don't need to read the CSRF cookie from JS (AJAX), set True; otherwise leave False.
CSRF_COOKIE_HTTPONLY = True

# ---------- Headers ----------
SECURE_CONTENT_TYPE_NOSNIFF = True 
X_FRAME_OPTIONS = "DENY"          

# NOTE: SECURE_BROWSER_XSS_FILTER is obsolete in modern browsers/Django (removed).
# Prefer CSP and correct escaping instead.

# ---------- HTTPS / HSTS ----------
SECURE_SSL_REDIRECT = True           # redirect HTTP -> HTTPS (enable once HTTPS is ready)
SECURE_HSTS_SECONDS = 31536000       # 1 year
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True           # consider submitting to HSTS preload list after verifying

# ---------- Referrer policy ----------
SECURE_REFERRER_POLICY = "strict-origin-when-cross-origin"

# ---------- CSRF trusted origins (add your domain) ----------
CSRF_TRUSTED_ORIGINS = [
    "https://your-domain.com",
    "https://www.your-domain.com",
]
# Strict baseline; adjust for your needs (fonts, images, CDNs, etc.)
CSP_DEFAULT_SRC = ("'self'",)
CSP_SCRIPT_SRC = ("'self'",)            # if you must allow inline: add "'unsafe-inline'" (not recommended)
CSP_STYLE_SRC = ("'self'",)             # if you use inline styles or Tailwind via CDN, add what you need
CSP_IMG_SRC = ("'self'", "data:",)      # allow images and data URIs for small inline images
CSP_FONT_SRC = ("'self'", "data:",)
CSP_FRAME_ANCESTORS = ("'none'",)
CSP_OBJECT_SRC = ("'none'",)
# Example if you serve static from a CDN:
# CSP_IMG_SRC = ("'self'", "data:", "https://cdn.example.com")
# CSP_SCRIPT_SRC = ("'self'", "https://cdn.example.com")
# Force all traffic to use HTTPS
SECURE_SSL_REDIRECT = True   # Redirect HTTP requests to HTTPS

# HTTP Strict Transport Security (HSTS)
SECURE_HSTS_SECONDS = 31536000  # One year in seconds
SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # Apply HSTS to all subdomains
SECURE_HSTS_PRELOAD = True  # Allow site to be preloaded in browsers
# Make cookies secure (only sent over HTTPS)
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
# Browser security headers
X_FRAME_OPTIONS = 'DENY'           # Prevent clickjacking
SECURE_CONTENT_TYPE_NOSNIFF = True # Prevent MIME-type sniffing
SECURE_BROWSER_XSS_FILTER = True   # Enable browser XSS protection
# ========================
# SECURITY CONFIGURATION
# ========================

# Force HTTPS redirect
SECURE_SSL_REDIRECT = not DEBUG  

# HSTS: Strict Transport Security (force HTTPS in browsers)
SECURE_HSTS_SECONDS = 31536000  # 1 year
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# Secure cookies (only sent over HTTPS)
SESSION_COOKIE_SECURE = not DEBUG
CSRF_COOKIE_SECURE = not DEBUG

# Security headers
X_FRAME_OPTIONS = "DENY"  # Prevent clickjacking
SECURE_CONTENT_TYPE_NOSNIFF = True  # Prevent MIME sniffing
SECURE_BROWSER_XSS_FILTER = True  # XSS protection in browsers

# Referrer policy (extra privacy)
SECURE_REFERRER_POLICY = "strict-origin-when-cross-origin"







